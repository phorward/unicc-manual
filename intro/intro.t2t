
+ Introducing the UniCC parser generator +

++ Welcome to UniCC! ++

UniCC, standing as an acronym for "Universal Compiler-Compiler", is a target programming language-independent LALR(1) Parser Generator provided for several platforms. Its design-goal is to serve as an all-round design and build tool for any parsing-related issue, including production-quality compiler construction.

UniCC unions an integrated generator for lexical analyzers and a powerful LALR(1) parser generator into one single program. The programming interface is a rich, extendable and innovative EBNF-based grammar definition language, which gives a compiler-developer's allday business much more comfort and simplicity in writing grammars than ever before. It comes with many useful features for both grammar prototyping and design, parser optimization, semantic augmentation and parser programming. Lexical symbols can be directly defined within productions, right-hand side items can be referenced by meaningful names instead of only their offset numbers within semantic actions. Features like virtual- and embedded-productions finally help to rapidly build-up iterative and optional grammatical structures. Standard features like automatic conflict resolution, terminal and production precedence association, state compression as well as parser trace and behavior modification trough semantic actions round up the whole system.

By default, UniCC constructs whitespace-sensitive parsers. This causes an internal revision of the grammar according to rules that match whitespace only under certain circumstances. Whitespace handling will be performed by the parser rather than the lexer. The advantage of this approach is, that the entire power of a LALR(1) grammar can be used for creating very complex lexemes or whitespace constructs. If this feature is not required by a grammar, it can be switched off, resulting in smaller parse tables and faster parsers.

Also, UniCC is not bound to a specialized programming language. It features two kinds of code generators: a program-module generator that constructs program code for a particular target programming language based on a target language template, and a parser description generator. Latter one is an XML-based output file format which can be handled by any individual subsequent tasks or modules - specialized code-generators, analyzers, or direct interpreters.

++ The intention behind UniCC ++

The UniCC Parser Generator has its origin at //Phorward Software Technologies// and is initially written and maintained by its 1985 born core developer //Jan Max Meyer//. Phorward Software Technologies is a software-company in Dortmund, Germany, which focuses its business on compiler construction, scripting languages and software development tools, both in the area of open source and proprietary solutions.

UniCC designates as on of the flagship-products of Phorward Software, and is the result for the request to an lightweight, simple but flexible and platform-independent parser development system. UniCC is the base platform and compiler for many other compiler-related projects launched by Phorward Software Technologies, and will hopefully also be used by many other interesting software-projects in future.

To get more information on Phorward Software Technologies and our projects and products, visit http://www.phorward-software.com on the web.

++ A few words on this manual ++

Parsing and compiler-construction is on of the most complex, on the first view impenetrable-looking, but even fascinating and challenging topic on computer sciences. The knowledge and experience learned by this topic can be integrated into many software development issues of a programmer's everyday life and opens new possibilities and faster ways to success.

Some readers of this manual would have already taken some experience on this complex topic, maybe from a study on computer sciences, a business-related project that used some kind of programming or definition language or a private approach of writing a compiler for an domain-specific programming task. Rather others don't have any knowledge, yet.

The UniCC User Manual is - as it stands for - a user manual for the UniCC parser generator, and not a general textbook on compiler-construction. So this manual immediately starts into the topic of practical parsing, with the assistance of examples and the learning-by-doing principle. Deep knowledge on what's going on behind the grammars, how the parser internally works in detail and how it is constructed is not required or even covered here. But if there's more interest in these topics, e.g. language theories, parsing concepts, machine code generation and their optimization, or if generally deeper information on the topic of parsing and compiler construction is wanted, it is heavily recommended to read some adequate textbooks covering all this information. This manual does only focus on the usage of UniCC itself, and how parsers are implemented with it.

Altought the UniCC parser generator comes with entirely target-language independent facilities, all programming-related examples in this manual are in the C programming language. The C standard template for the UniCC program module generator, which is delivered with the UniCC program package, is currently the only well-tested and proven parser framework for UniCC so far. In future, other implementation languages and frameworks will be made available.

The UniCC User Manual is divided into three sections:

+ The first section contains a quick start guide into parser development in assistance with UniCC. It is written in the style of a tutorial, and is advised to quickly begin using UniCC and to become familar with the UniCC parser definition language. Authoring of this section has been started already a few years ago during earlier development stages of UniCC, so this is the reason why it is not up-to-date with all the technical possibilities UniCC provides now. But it's a good place to start. The goal of this quick start guide is the implementation of a small programming language compiler, called //xpl//.

+ The second section is the UniCC reference guide. It directs to the usage of UniCC and its grammar definition language, by describing the general usage, the code generator possibilities, the grammar definition language and all its features in a detailed way for topic-based lookup. This chapter also includes practical examples and snippets on feature-related problems and their solutions.

+ The third section provides information about the Standard C Parser Template delivered with the UniCC software package. It should be mostly attended by C programmers who want to develop parsers with UniCC targeting the C programming language. Hopefully there will be more sections like this one for other target languages as soon as they are implemented and well tested.


Hopefully this manual answers all questions coming up when UniCC shall become the workhorse of your upcoming compiler project. If not, don't avoid to drop a mail to us.

++ Contributions to UniCC ++

Altought the UniCC parser generator is under continuous development since 2006, its initial release to the public as an open source project had been in summer 2011. This means, that UniCC is a relatively young open source project, but also a proven and tested software, saddled and ready for many new, creative challenges.
In order to get even more better and famous, any kind of contribution to UniCC is acutely welcome. Code, fixes, enhancements and documentation contributions to the UniCC project are always accepted, if they are in favor of the general public and in the interest of Phorward Software Technologies and its product strategies behind UniCC. Help is also appreciated in form of support and advertise.

From the project view, the UniCC parser generator consists currently of two parts:

- The //UniCC Parser Generator//, which is an open source project released under the Artistic License, version 2.
- The //C Standard Parser Template// (C.tlt), which is part of the UniCC package, and released under the BSD-license.


UniCC uses its C Standard Parser Template to bootstrap its own parser using itself. To compile UniCC, the newest version of the //Phorward Foundation Libraries & SDK// (https://sourceforge.net/projects/phorward/) is required. The Phorward Foundation Libraries & SDK serves as a toolchain, build-environment and C programming framework for software projects written at Phorward Software Technologies.

To get more stuff, support and information on the UniCC project, visit the product homepage at http://unicc.phorward-software.com or the SourceForge.net project page at https://sourceforge.net/projects/unicc/.
