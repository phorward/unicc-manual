
+ Introducing the UniCC parser generator +

++ Welcome to UniCC! ++

UniCC, standing as an acronym for //Universal Compiler-Compiler//, is a powerful LALR(1) Parser Generator and Language Development System for computer professionals. Its design-goal is to serve as an all-round design and build tool assisting compiler-writers in any parsing-related task, including production-quality compiler construction and the implementation of domains specific languages.

UniCC unions an integrated generator for lexical analyzers and a powerful LALR(1) parser generator into one software solution. The programming interface of UniCC is a rich, extendable and innovative EBNF-based grammar definition language (Extended-Backus-Naur-Form). This language gives the compiler-developer's task much more comfort and simplicity in implementing parsers than ever before. It comes with useful features for both grammar prototyping and design, parser optimization, semantic augmentation and parser programming. Lexical symbols can be directly defined within productions, right-hand side items can be referenced by meaningful names within semantic actions, instead of only their offsets. Features like virtual- and embedded-productions finally help to rapidly build-up iterative and optional grammatical structures. Standard features like automatic conflict resolution, terminal and production precedence association, state compression as well as parser trace and behavior modification trough semantic actions round up the whole system.

By default, UniCC constructs whitespace-sensitive parsers. This paradigm is a speciality of UniCC and causes an internal revision of the grammar according to rules that match whitespace only under certain circumstances. Whitespace handling will be performed by the parser rather than the lexer. The advantage of this approach is, that the entire power of a LALR(1) grammar can be used for creating very complex lexemes or whitespace constructs. If this feature is not required by a grammar, it can be switched off, resulting in smaller parse tables and faster parsers.

UniCC is technically a target language independent parser generator, which means that it is not bound to a special programming language. Currently, only support of the C programming language is given due the UniCC Standard C Parser Template. More standard templates for other languages like C++ and Java will be developed and released in future by Phorward Software Technologies, but are not available for now.

Next to the generation of parser program modules in a particular programming language, UniCC also offers the possibility to export all the grammar information, its parse tables, semantic actions and settings extracted from a UniCC parser definition into a target-independent XML-based output format that can be handled by any individual subsequent tasks or module - specialized code-generators, analyzers, or direct interpreters.

@NEWPAGE@

++ The intention behind UniCC ++

The UniCC Parser Generator has its origin at //Phorward Software Technologies// and is initially written and maintained by its 1985 born core developer //Jan Max Meyer//.

Phorward Software Technologies is a software-company from Dortmund, Germany, which focuses its business on compiler construction, scripting languages and software development tools, both in the area of open source and commercial solutions.

UniCC designates to be as one of the flagship-products of Phorward Software, and is the result for the request to an lightweight, simple, but flexible and platform-independent parser development system. UniCC is the base platform and compiler for many other compiler-related projects launched by Phorward Software Technologies, and will hopefully also be used by many other interesting software-projects in future.

To get more information on Phorward Software Technologies and our projects and products, visit http://www.phorward-software.com on the web.

@NEWPAGE@

++ A few words on this manual ++

Parsing and compiler-construction is on of the most complex, on the first view impenetrable-looking, but even fascinating and challenging topic of computer sciences. The knowledge and experience teached by this topic can be integrated into many software development issues of a programmer's everyday life and opens new possibilities and faster ways to success.

Some readers of this manual would have already taken some experience on this complex topic, maybe from a study on computer sciences, a business-related project that used some kind of programming or definition language or a private approach of writing a compiler for an domain-specific programming task. Rather others don't have any knowledge yet, but want to know how things work or require knowledge for an upcoming project.

The UniCC User Manual is - as it stands for - a user manual for the UniCC parser generator, and not a general textbook on compiler-construction. So this manual immediately starts into the topic of practical parsing, with the assistance of examples and the learning-by-doing principle. Deep knowledge on what's going on behind the grammars, how the parser internally works in detail and how it is constructed is not required or even covered here. But if there's more interest in these topics, e.g. language theories, parsing concepts, machine code generation and their optimization, or if generally deeper information on the topic of parsing and compiler construction is wanted, it is heavily recommended to read some adequate textbooks covering all these topics. This manual does only focus on the usage of UniCC itself, and how parsers are implemented with it.

Altought the UniCC parser generator comes with entirely target-language independent facilities, all programming-related examples in this manual are in the C programming language. The C standard template for the UniCC program module generator, which is delivered with the UniCC program package, is currently the only well-tested and proven parser framework for UniCC so far. In future, other implementation languages and frameworks will be made available by Phorward Software Technologies or by third-parties.

The UniCC User Manual is divided into four sections:

- The first section contains a quick start guide into parser development in assistance with UniCC. It is written in the style of a tutorial, and is advised to quickly begin using UniCC and to become familar with the UniCC parser definition language. Authoring of this section has been started already a few years ago during earlier development stages of UniCC, so this is the reason why it is not up-to-date with all the technical possibilities UniCC provides right now. But it's a good place to start. The goal of this quick start guide is the implementation of a small programming language compiler, called //xpl//.
- The second section is the UniCC reference guide relating to the installation or build, the use of the UniCC command-line interface and the general features of UniCC.
- The third section directs to the grammar definition language and all its features in a detailed way for topic-based lookup. This chapter also includes practical examples and snippets on feature-related problems and their solutions.
- The fourth section provides information about the Standard C Parser Template delivered with the UniCC software package. It should be mostly attended by C programmers who want to develop parsers with UniCC targeting the C programming language. There will be more sections or separate manuals like this one for other target languages, e.g. C++ or Java, as soon as they are implemented and well tested.


The manual will be continously be updated and extended with more or detailed information. Hopefully it answers all of your questions coming up when UniCC shall become the workhorse of your upcoming compiler project. If not, don't avoid to drop a mail, to get individual support and help with the UniCC Parser Generator and its subsequent modules.

@NEWPAGE@

++ Contributions to UniCC ++

Altought the UniCC parser generator is under continuous development since 2006, its initial release to the public as an open source project had been in summer 2011. This means, that UniCC is a relatively young open source project, but also a proven and well tested software, saddled and ready for many new, creative challenges.

In order to get even more better and famous, any kind of contribution to UniCC is acutely welcome. Code, fixes, enhancements and documentation contributions to the UniCC project are always accepted, if they are in favor of the general public and in the interest of Phorward Software Technologies and its product strategies behind UniCC. Help is also appreciated in form of support and advertise.

From the project view, the UniCC software package consists currently of two projects.

- The //UniCC LALR(1) Parser Generator//, which is an open source project released under the Artistic License, version 2. It has its product website located under http://unicc.phorward-software.com/.
- The //UniCC Standard C Parser Template// (C.tlt), which is part of the UniCC software package, and released under the BSD-license. This project also has its own website located under http://cparser.phorward-software.com/.


UniCC uses its Standard C Parser Template to bootstrap its own parser out of itself. To compile UniCC, the newest version of the //Phorward Foundation Libraries & SDK// (http://phorward.phorward-software.com) is required. The Phorward Foundation Libraries & SDK serves as a toolchain, build-environment and C programming framework for software projects written at Phorward Software Technologies. There is also an howto guide about [how to build UniCC from source #ref_compile_from_source] within this manual.

To get more stuff, support and information on the UniCC project, visit the product homepage at http://unicc.phorward-software.com, or ask directly via e-mail.
